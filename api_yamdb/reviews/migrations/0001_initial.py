# Generated by Django 3.2 on 2023-06-26 20:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='название категории')),
                ('slug', models.SlugField(unique=True, verbose_name='слаг категории')),
            ],
            options={
                'verbose_name': 'Категории',
                'verbose_name_plural': 'Категория',
                'ordering': ['slug'],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата добавления')),
                ('text', models.TextField(verbose_name='Текст комметария')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='название жанра')),
                ('slug', models.SlugField(unique=True, verbose_name='слаг категории')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата добавления')),
                ('text', models.TextField(verbose_name='Текст отзыва')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Оценка должна быть не меньше 1.'), django.core.validators.MaxValueValidator(10, message='Оценка должна быть не больше 10.')], verbose_name='Оценка произведения')),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='имя произведения')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900, message='Не надодобавлять произведенияранее 1900-го года'), django.core.validators.MaxValueValidator(2023, message='Не надодобавлять произведения из будущего')], verbose_name='год выхода')),
                ('rating', models.PositiveSmallIntegerField(default=None, null=True, validators=[django.core.validators.MinValueValidator(1, message='Оценка должна быть не меньше 1.'), django.core.validators.MaxValueValidator(10, message='Оценка должна быть не больше 10.')], verbose_name='Рейтинг')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='reviews.category', verbose_name='категория')),
                ('genre', models.ManyToManyField(to='reviews.Genre', verbose_name='жанр')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
                'ordering': ['name'],
            },
        ),
    ]
